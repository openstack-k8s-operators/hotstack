---
stages:
  - name: Metal platform Provisioning CR
    documentation: |
      Create a Provisioning custom resource (CR) to enable OCP Metal platform components
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/metal-platform-provisioning.yaml.j2")
      }}
  - name: Dependencies
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/deps-stages.yaml.j2")
      }}

  - name: Cinder LVM
    stages: >-
      {{
        lookup("ansible.builtin.file",
               "common/stages/cinder-lvm-label-stages.yaml")
      }}

  - name: TopoLVM
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/topolvm-stages.yaml.j2")
      }}

  - name: OLM Openstack
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/olm-openstack-stages.yaml.j2")
      }}

  - name: Namespaces
    manifest: ./manifests/namespaces.yaml
    wait_conditions:
      - oc wait namespaces openstack-a --for jsonpath='{.status.phase}'=Active --timeout=30s
      - oc wait namespaces openstack-b --for jsonpath='{.status.phase}'=Active --timeout=30s

  - name: Shared NNCP
    manifest: ./manifests/shared_nncp.yaml
    wait_conditions:
      - >-
        oc wait -n openstack nncp master-0-shared
        --for jsonpath='{.status.conditions[0].reason}'=SuccessfullyConfigured
        --timeout=120s

  - name: NodeNetworkConfigurationPolicy (nncp)
    manifest: manifests/networking/nncp.yaml
    wait_conditions:
      - >-
        oc wait -n openstack-a nncp master-0-a
        --for jsonpath='{.status.conditions[0].reason}'=SuccessfullyConfigured
        --timeout=120s
      - >-
        oc wait -n openstack-b nncp master-0-b
        --for jsonpath='{.status.conditions[0].reason}'=SuccessfullyConfigured
        --timeout=120s

  - name: NetworkAttchmentDefinition (NAD)
    manifest: manifests/networking/nad.yaml

  - name: MetalLB - L2Advertisement and IPAddressPool
    manifest: manifests/networking/metallb.yaml

  - name: Netconfig
    manifest: manifests/networking/netconfig.yaml

  - name: OpenstackControlPlane secrets
    manifest: manifests/control-planes/secrets.yaml

  - name: OpenstackControlPlane
    manifest: manifests/control-planes/control-planes.yaml
    wait_conditions:
      - >-
        oc wait -n openstack-a openstackcontrolplane controlplane
        --for condition=Ready --timeout=30m
      - >-
        oc wait -n openstack-b openstackcontrolplane controlplane
        --for condition=Ready --timeout=30m

  - name: Cloud a - Dataplane SSH key secret
    shell: >-
      oc create -n openstack-a secret generic dataplane-ansible-ssh-private-key-secret
      --save-config --dry-run=client
      --from-file=authorized_keys=/home/zuul/.ssh/id_rsa.pub
      --from-file=ssh-privatekey=/home/zuul/.ssh/id_rsa
      --from-file=ssh-publickey=/home/zuul/.ssh/id_rsa.pub
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack-a secret dataplane-ansible-ssh-private-key-secret
        --for jsonpath='{.metadata.name}'=dataplane-ansible-ssh-private-key-secret
        --timeout=30s

  - name: Cloud b - Dataplane SSH key secret
    shell: >-
      oc create -n openstack-b secret generic dataplane-ansible-ssh-private-key-secret
      --save-config --dry-run=client
      --from-file=authorized_keys=/home/zuul/.ssh/id_rsa.pub
      --from-file=ssh-privatekey=/home/zuul/.ssh/id_rsa
      --from-file=ssh-publickey=/home/zuul/.ssh/id_rsa.pub
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack-b secret dataplane-ansible-ssh-private-key-secret
        --for jsonpath='{.metadata.name}'=dataplane-ansible-ssh-private-key-secret
        --timeout=30s

  - name: Cloud a - Nova migration SSH key secret
    shell: >-
      oc create -n openstack-a secret generic nova-migration-ssh-key
      --save-config --dry-run=client
      --from-file=ssh-privatekey=/home/zuul/.ssh/id_nova_migrate
      --from-file=ssh-publickey=/home/zuul/.ssh/id_nova_migrate.pub
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack-a secret nova-migration-ssh-key
        --for jsonpath='{.metadata.name}'=nova-migration-ssh-key
        --timeout=30s

  - name: Cloud b - Nova migration SSH key secret
    shell: >-
      oc create -n openstack-b secret generic nova-migration-ssh-key
      --save-config --dry-run=client
      --from-file=ssh-privatekey=/home/zuul/.ssh/id_nova_migrate
      --from-file=ssh-publickey=/home/zuul/.ssh/id_nova_migrate.pub
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack-b secret nova-migration-ssh-key
        --for jsonpath='{.metadata.name}'=nova-migration-ssh-key
        --timeout=30s

  - name: Dataplane Secrets
    manifest: manifests/dataplanes/secrets.yaml

  - name: Cloud a - BaremetalHosts BMC secret
    shell: >-
      oc create -n openstack-a secret generic bmc-secret
      --save-config --dry-run=client
      --from-literal=username=admin
      --from-literal=password=password
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack-a secret bmc-secret
        --for jsonpath='{.metadata.name}'=bmc-secret
        --timeout=30s

  - name: Cloud b - BaremetalHosts BMC secret
    shell: >-
      oc create -n openstack-b secret generic bmc-secret
      --save-config --dry-run=client
      --from-literal=username=admin
      --from-literal=password=password
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack-b secret bmc-secret
        --for jsonpath='{.metadata.name}'=bmc-secret
        --timeout=30s

  - name: BaremetalHosts CRs
    j2_manifest: manifests/dataplanes/baremetal_hosts.yaml.j2
    wait_conditions:
      - "timeout 5m hotstack-wait-for-bmh --namespace openstack-a --bmh bmh-a-0"
      - "timeout 5m hotstack-wait-for-bmh --namespace openstack-b --bmh bmh-b-0"

  - name: Dataplane nodeset
    manifest: manifests/dataplanes/nodesets.yaml
    patches: "{{ hotstack_default_nodeset_patches }}"
    wait_conditions:
      - >-
        oc wait -n openstack-a openstackdataplanenodesets.dataplane.openstack.org
        openstack-edpm --for condition=SetupReady --timeout=40m
      - >-
        oc wait -n openstack-b openstackdataplanenodesets.dataplane.openstack.org
        openstack-edpm --for condition=SetupReady --timeout=40m

  - name: Dataplane Deployment
    manifest: manifests/dataplanes/deployments.yaml
    wait_conditions:
      - >-
        oc wait -n openstack-a openstackdataplanedeployments.dataplane.openstack.org
        dataplane --for condition=Ready --timeout=40m
      - >-
        oc wait -n openstack-b openstackdataplanedeployments.dataplane.openstack.org
        dataplane --for condition=Ready --timeout=40m
      - >-
        timeout --foreground 15m hotstack-nova-discover-hosts
        --namespace openstack-a --num-computes 1
      - >-
        timeout --foreground 15m hotstack-nova-discover-hosts
        --namespace openstack-b --num-computes 1

  - name: Update openstack-operators OLM
    stages: >-
      {{
        lookup('ansible.builtin.template',
               'common/stages/openstack-olm-update.yaml.j2')
      }}
    run_conditions:
      - >-
        {{
          openstack_operators_update is defined and
          openstack_operators_update | bool
        }}
