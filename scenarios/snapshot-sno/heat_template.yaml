---
heat_template_version: rocky

description: >
  Heat template to set up infra for snapshot. Hotstack controller + OCP SNO node

parameters:
  dns_servers:
    type: comma_delimited_list
    default:
      - 8.8.8.8
      - 8.8.4.4
  ntp_servers:
    type: comma_delimited_list
    default: []
  controller_ssh_pub_key:
    type: string
  dataplane_ssh_pub_key:
    type: string
  router_external_network:
    type: string
    default: public
  floating_ip_network:
    type: string
    default: public
  net_value_specs:
    type: json
    default: {}

  controller_params:
    type: json
    default:
      image: hotstack-controller
      flavor: hotstack.small
  ocp_master_params:
    type: json
    default:
      image: ipxe-boot-usb
      flavor: hotstack.xxlarge
  ocp_worker_params:
    type: json
    default:
      image: ipxe-boot-usb
      flavor: hotstack.xxlarge
  compute_params:
    type: json
    default:
      image: CentOS-Stream-GenericCloud-9
      flavor: hotstack.large
  networker_params:
    type: json
    default:
      image: CentOS-Stream-GenericCloud-9
      flavor: hotstack.small
  bmh_params:
    type: json
    default:
      image: CentOS-Stream-GenericCloud-9
      cd_image: sushy-tools-blank-image
      flavor: hotstack.medium
  ironic_params:
    type: json
    default:
      image: CentOS-Stream-GenericCloud-9
      cd_image: sushy-tools-blank-image
      flavor: hotstack.medium


resources:
  #
  # Networks
  #
  machine-net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      value_specs: {get_param: net_value_specs}

  #
  # Subnets
  #
  machine-subnet:
    type: OS::Neutron::Subnet
    properties:
      network: {get_resource: machine-net}
      ip_version: 4
      cidr: 192.168.32.0/24
      enable_dhcp: true
      dns_nameservers:
        - 192.168.32.254

  #
  # Routers
  #
  router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      external_gateway_info:
        network: {get_param: router_external_network}
        # enable_snat: true

  machine-net-router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: {get_resource: router}
      subnet: {get_resource: machine-subnet}

  #
  # Instances
  #
  controller_users:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        users:
          - default
          - name: zuul
            gecos: "Zuul user"
            sudo: ALL=(ALL) NOPASSWD:ALL
            ssh_authorized_keys:
              - {get_param: controller_ssh_pub_key}

  controller-write-files:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
          - path: /etc/dnsmasq.conf
            content: |
              # dnsmasq service config
              # Include all files in /etc/dnsmasq.d except RPM backup files
              conf-dir=/etc/dnsmasq.d,.rpmnew,.rpmsave,.rpmorig
              no-resolv
            owner: root:dnsmasq
          - path: /etc/dnsmasq.d/forwarders.conf
            content:
              str_replace:
                template: |
                  # DNS forwarders records
                  server=$dns1
                  server=$dns2
                params:
                  $dns1: {get_param: [dns_servers, 0]}
                  $dns2: {get_param: [dns_servers, 1]}
            owner: root:dnsmasq
          - path: /etc/dnsmasq.d/host_records.conf
            content:
              str_replace:
                template: |
                  # Host records
                  host-record=controller-0.openstack.lab,$controller0
                  host-record=api.sno.openstack.lab,$master0
                  host-record=api-int.sno.openstack.lab,$master0
                  host-record=master-0.sno.openstack.lab,$master0
                params:
                  $controller0: {get_attr: [controller-machine-port, fixed_ips, 0, ip_address]}
                  $master0: {get_attr: [master0-machine-port, fixed_ips, 0, ip_address]}
            owner: root:dnsmasq
          - path: /etc/dnsmasq.d/wildcard_records.conf
            content:
              str_replace:
                template: |
                  # Wildcard records
                  address=/apps.sno.openstack.lab/$addr
                params:
                  $addr: {get_attr: [master0-machine-port, fixed_ips, 0, ip_address]}
            owner: root:dnsmasq
          - path: /etc/resolv.conf
            content: |
              nameserver: 127.0.0.1
            owner: root:root
          - path: /etc/NetworkManager/conf.d/98-rc-manager.conf
            content: |
              [main]
              rc-manager=unmanaged
            owner: root:root

  controller-runcmd:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        runcmd:
          - ['systemctl', 'enable', 'dnsmasq.service']
          - ['systemctl', 'start', 'dnsmasq.service']
          - ['setenforce', 'permissive']
          - ['sed', '-i', 's/Listen 80/Listen 8081/g', '/etc/httpd/conf/httpd.conf']
          - ['systemctl', 'enable', 'httpd.service']
          - ['systemctl', 'start', 'httpd.service']

  controller-init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: controller_users}
        - config: {get_resource: controller-write-files}
        - config: {get_resource: controller-runcmd}

  controller-machine-port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: machine-net}
      mac_address: "fa:16:9e:81:f6:05"
      fixed_ips:
        - ip_address: 192.168.32.254

  controller-floating-ip:
    depends_on: machine-net-router-interface
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: floating_ip_network}
      port_id: {get_resource: controller-machine-port}

  controller:
    type: OS::Nova::Server
    properties:
      image: {get_param: [controller_params, image]}
      flavor: {get_param: [controller_params, flavor]}
      networks:
        - port: {get_resource: controller-machine-port}
      user_data_format: RAW
      user_data: {get_resource: controller-init}

  # OCP Masters

  # DHCP Opts value
  extra-dhcp-opts-value:
    type: OS::Heat::Value
    properties:
      type: json
      value:
        extra_dhcp_opts:
          - opt_name: "60"
            opt_value: "HTTPClient"
            ip_version: 4
          - opt_name: "67"
            opt_value:
              str_replace:
                template: http://$server_address:8081/boot-artifacts/agent.x86_64.ipxe
                params:
                  $server_address: {get_attr: [controller-machine-port, fixed_ips, 0, ip_address]}


  master0-machine-port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: machine-net}
      port_security_enabled: false
      mac_address: "fa:16:9e:81:f6:10"
      fixed_ips:
        - ip_address: 192.168.32.10
      value_specs: {get_attr: [extra-dhcp-opts-value, value]}

  master0-lvms-vol0:
    type: OS::Cinder::Volume
    properties:
      size: 20

  master0-cinder-vol0:
    type: OS::Cinder::Volume
    properties:
      size: 20

  master0-cinder-vol1:
    type: OS::Cinder::Volume
    properties:
      size: 20

  master0-cinder-vol2:
    type: OS::Cinder::Volume
    properties:
      size: 20

  master0:
    type: OS::Nova::Server
    properties:
      image: {get_param: [ocp_master_params, image]}
      flavor: {get_param: [ocp_master_params, flavor]}
      block_device_mapping_v2:
        - boot_index: -1
          device_type: disk
          volume_id: {get_resource: master0-lvms-vol0}
        - boot_index: -1
          device_type: disk
          volume_id: {get_resource: master0-cinder-vol0}
        - boot_index: -1
          device_type: disk
          volume_id: {get_resource: master0-cinder-vol1}
        - boot_index: -1
          device_type: disk
          volume_id: {get_resource: master0-cinder-vol2}
      networks:
        - port: {get_resource: master0-machine-port}

outputs:
  controller_floating_ip:
    description: Controller Floating IP
    value: {get_attr: [controller-floating-ip, floating_ip_address]}

  controller_ansible_host:
    description: >
      Controller ansible host, this struct can be passed to the ansible.builtin.add_host module
    value:
      name: controller-0
      ansible_ssh_user: zuul
      ansible_host: {get_attr: [controller-floating-ip, floating_ip_address]}
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      groups: controllers

  ocp_install_config:
    description: OCP install-config.yaml
    value:
      apiVersion: v1
      baseDomain: openstack.lab
      controlPlane:
        architecture: amd64
        hyperthreading: Disabled
        name: master
        replicas: 1
      compute:
        - architecture: amd64
          hyperthreading: Disabled
          name: worker
          replicas: 0
      metadata:
        name: sno
      networking:
        clusterNetwork:
          - cidr: 10.128.0.0/16
            hostPrefix: 23
        machineNetwork:
          - cidr: {get_attr: [machine-subnet, cidr]}
        serviceNetwork:
          - 172.30.0.0/16
        networkType: OVNKubernetes
      platform:
        none: {}
      pullSecret: _replaced_
      sshKey: {get_param: dataplane_ssh_pub_key}

  ocp_agent_config:
    description: OCP agent-config.yaml
    value:
      apiVersion: v1beta1
      kind: AgentConfig
      metadata:
        name: sno
      rendezvousIP: {get_attr: [master0-machine-port, fixed_ips, 0, ip_address]}
      additionalNTPSources: {get_param: ntp_servers}
      bootArtifactsBaseURL:
        str_replace:
          template: http://$server_address:8081/boot-artifacts
          params:
            $server_address: {get_attr: [controller-machine-port, fixed_ips, 0, ip_address]}
      hosts:
        - hostname: master-0
          role: master
          interfaces:
            - name: eth0
              macAddress: {get_attr: [master0-machine-port, mac_address]}
          networkConfig:
            interfaces:
              - name: eth0
                type: ethernet
                state: up
                mac-address: {get_attr: [master0-machine-port, mac_address]}
                ipv4:
                  enabled: true
                  dhcp: true
                ipv6:
                  enabled: false

  snapset_data:
    description: >
      Information about instance UUID's and volume UUIDs that need to be in the Snapshot collection.
    value:
      instances:
        controller:
          uuid: {get_resource: controller}
          role: controller
          mac_address: {get_attr: [controller-machine-port, mac_address]}
        master0:
          uuid: {get_resource: master0}
          role: ocp_master
          mac_address: {get_attr: [master0-machine-port, mac_address]}
