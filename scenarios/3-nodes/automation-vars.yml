---
stages:
  - name: Cinder LVM
    stages: >-
      {{
        lookup("ansible.builtin.file",
               "common/stages/cinder-lvm-label-stages.yaml")
      }}

  - name: TopoLVM
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/topolvm-stages.yaml.j2")
      }}

  - name: OLM Dependencies
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/olm-deps-stages.yaml.j2")
      }}

  - name: OLM Openstack
    stages: >-
      {{
        lookup("ansible.builtin.template",
               "common/stages/olm-openstack-stages.yaml.j2")
      }}

  - name: NodeNetworkConfigurationPolicy (nncp)
    manifest: manifests/control-plane/networking/nncp.yaml
    wait_conditions:
      - >-
        oc wait -n openstack nncp -l osp/nncm-config-type=standard
        --for jsonpath='{.status.conditions[0].reason}'=SuccessfullyConfigured
        --timeout=5m

  - name: NetworkAttchmentDefinition (NAD)
    manifest: manifests/control-plane/networking/nad.yaml

  - name: MetalLB - L2Advertisement and IPAddressPool
    manifest: manifests/control-plane/networking/metallb.yaml

  - name: Netconfig
    manifest: manifests/control-plane/networking/netconfig.yaml

  - name: OpenstackControlPlane secrets
    manifest: manifests/control-plane/secrets.yaml

  - name: OpenstackControlPlane
    manifest: manifests/control-plane/control-plane.yaml
    wait_conditions:
      - >-
        oc wait -n openstack openstackcontrolplane controlplane
        --for condition=Ready --timeout=60m

  - name: Dataplane SSH key secret
    cmd: >-
      oc create -n openstack secret generic dataplane-ansible-ssh-private-key-secret
      --save-config --dry-run=client
      --from-file=ssh-privatekey=/home/zuul/.ssh/id_rsa
      --from-file=ssh-publickey=/home/zuul/.ssh/id_rsa.pub
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack secret dataplane-ansible-ssh-private-key-secret
        --for jsonpath='{.metadata.name}= dataplane-ansible-ssh-private-key-secret'
        --timeout=30s

  - name: Nova migration SSH key secret
    cmd: >-
      oc create -n openstack secret generic nova-migration-ssh-key
      --save-config --dry-run=client
      --from-file=ssh-privatekey=/home/zuul/.ssh/id_nova_migrate
      --from-file=ssh-publickey=/home/zuul/.ssh/id_nova_migrate.pub
      --type=Opaque -o yaml | oc apply -f -
    wait_conditions:
      - >-
        oc wait -n openstack secret nova-migration-ssh-key
        --for jsonpath='{.metadata.name}=nova-migration-ssh-key'
        --timeout=30s

  - name: EDPM Secrets
    manifest: manifests/edpm/secrets.yaml

  - name: EDPM nodeset
    manifest: manifests/edpm/edpm.yaml
    patches:
      - path: spec.nodeTemplate.ansible.ansibleVars.edpm_bootstrap_command
        value: >-
          {{
            lookup('ansible.builtin.template', hotstack_edpm_bootstrap_command)
          }}
      - path: spec.nodeTemplate.ansible.ansibleVars.edpm_podman_registries
        value: "{{ edpm_podman_registries }}"
        where:
          - path: spec.nodeTemplate.ansible.ansibleVars.edpm_podman_registries
            value: null
      - path: spec.nodeTemplate.ansible.ansibleVars.edpm_container_registry_logins
        value: "{{ edpm_container_registry_logins }}"
        where:
          - path: spec.nodeTemplate.ansible.ansibleVars.edpm_podman_registries
            value: null
    wait_conditions:
      - >-
        oc -n openstack wait openstackdataplanenodeset openstack-edpm
        --for condition=SetupReady --timeout=10m

  - name: EDPM deployment
    manifest: manifests/dataplane.yaml
    wait_conditions:
      - >-
        oc -n openstack wait openstackdataplanedeployment edpm-deployment
        --for condition=Ready --timeout=40m
